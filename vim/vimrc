" vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" bundles
Bundle 'a.vim'
Bundle 'Gundo'
Bundle 'Indent-Guides'
Bundle 'JavaScript-Indent'
Bundle 'surround.vim'
Bundle 'Syntastic'
Bundle 'Tabular'
Bundle 'vcscommand.vim'
Bundle 'Vimtodo'
Bundle 'wombat256.vim'
Bundle 'hynek/vim-python-pep8-indent'
Bundle 'scrooloose/nerdtree'

" editing options
filetype plugin indent on
set tabstop=4
set shiftwidth=4
set softtabstop=4
set noexpandtab
set backspace=indent,eol,start
set textwidth=0
set timeoutlen=600
" indentation settings
set autoindent
set smartindent
set cinoptions=:0,l1,b1,g0,i0,(1s,U1,Ws,m1,j1,J1
set cinkeys+=0=break
" search and display
set showmatch
set nohlsearch
set incsearch
set showcmd
set cursorline
" windowing
set number
set scrolloff=3
set laststatus=2
set ruler
set title
" misc
set directory=~/.vim/.swap,.,/var/tmp,/tmp
set nobackup
set noerrorbells
set novisualbell
set mouse=a
set ttymouse=xterm2
set wildmode=longest,list,full
set wildmenu
set shortmess+=I

" color scheme
syntax on
set t_Co=256
set background=dark
colorscheme wombat256mod

" show trailing whitespace (except insert mode)
highlight ExtraWhitespace ctermbg=red guibg=red
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
au InsertLeave * match ExtraWhiteSpace /\s\+$/

" mappings
let mapleader=','
map <C-h> <C-w>h
imap <C-h> <C-o><C-w>h
map <C-j> <C-w>j
imap <C-j> <C-o><C-w>j
map <C-k> <C-w>k
imap <C-k> <C-o><C-w>k
map <C-l> <C-w>l
imap <C-l> <C-o><C-w>l
map <S-h> :tabprevious<CR>
map <S-l> :tabnext<CR>
map <S-j> :bnext<CR>
map <S-k> :bprevious<CR>

" accidential aliases
cnoreabbrev W w
cnoreabbrev Q q


" gundo plugin
let g:gundo_preview_bottom=1
nmap <Leader>u :GundoToggle<CR>

" indent guides plugin
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_auto_colors=0
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
hi IndentGuidesOdd  ctermbg=236
hi IndentGuidesEven ctermbg=235

" tabularize plugin
nmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a= :Tabularize /=<CR>
nmap <Leader>a: :Tabularize /:\zs<CR>
vmap <Leader>a: :Tabularize /:\zs<CR>

" disable syntastic for c/c++; it's too slow to run all the time
let g:syntastic_mode_map = {'mode': 'active',
			              \ 'active_filetypes': [],
			              \ 'passive_filetypes': ['c', 'cpp']}

" NERDTree
map <Leader>t :NERDTree<CR>

